MPASM  5.31                    EJERCICIO3.ASM   11-16-2021  20:22:41         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;------------------------------------------------------------
                      00002 ; Proyecto: Ejercicio 3 - PUNTO C
                      00003 ; Autor: Matías Damian Giudice
                      00004 ; PIC: 16F628A
                      00005 ; Velocidad de reloj: Int 4 Mhz
                      00006 ; Descripcion: 
                      00007 ;------------------------------------------------------------
                      00008 #INCLUDE <P16F628A.INC>                                         ;Incluimos el PIC
                      00001         LIST
                      00002 ; P16F628A.INC  Standard Header File, Version 1.10    Microchip Technology, Inc.
                      00265         LIST
                      00266 
                      00009         LIST P=PIC16F628A
2007   3F10           00010     __CONFIG    3F10
                      00011 ;---DEFINIMOS COSTANTES--------------------------------------
  00000020            00012 NUMERO     EQU  0X20                                            ;Posicion de memoria
  00000021            00013 CONT_TMR0  EQU  0X21                                            ;Posicion de memoria
  00000022            00014 FLAG_RESTA EQU  0X22                                            ;Posicion de memoria
                      00015 ;------------------------------------------------------------
                      00016         ORG     0x00                                                    ;Aca comienza el programa, se ej
                            ecuta
0000   2???           00017                 GOTO    inicio                                          ;Se va a mover a la etiqueta ini
                            cio
                      00018         ORG     0x04                                                    ;Cuando sucede una interrupcion 
                            viene a esta linea
0004   138B           00019                 BCF             INTCON,7                                        ;Desabilita las interrup
                            ciones globales
0005   1C8B           00020                 BTFSS   INTCON,1                                        ;Se verifica si la flag de la pu
                            lsacion del boton esta activa, en ese caso va a la etiqueta main
0006   2???           00021                 GOTO    main                                            ;Se va a mover a la etiqueta mai
                            n
0007   108B           00022                 BCF             INTCON,1                                        ;Baja la flag y termina 
                            aca hasta que se levante otra interrupcion
                      00023 
0008   1683           00024                 BSF             STATUS,5                                        ;Nos movemos al banco 1
0009   3020           00025                 MOVLW   0x20                                            ;Cargamos el acumulador con 0x20
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000A   0681           00026                 XORWF   OPTION_REG,F                            ;El contenido del acumulador con el regi
                            stro f
000B   1283           00027                 BCF             STATUS,5                                        ;Volvemos al banco 0
000C   2???           00028                 GOTO    end_int                                         ;Se va a mover a la etiqueta end
                            _int
                      00029 
000D                  00030 inicio
000D   303D           00031         MOVLW   .61                                                             ;Cargamos a w el 61 en d
                            ecimal
000E   0081           00032         MOVWF   TMR0                                                    ;Lo que tenemos en w lo pasamos 
                            a TMR0
000F   1683           00033         BSF             STATUS,5                                                ;Nos movemos al banco 1
                      00034 ;------------------------------------------------------------
                      00035 ;Luego activamos los registros del 7 al 0
                      00036 ;------------------------------------------------------------
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
MPASM  5.31                    EJERCICIO3.ASM   11-16-2021  20:22:41         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0010   1381           00037         BCF             OPTION_REG,7                                    ;NOT_RBPU
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0011   1281           00038         BCF             OPTION_REG,5                                    ;Es el clock para el TMR0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0012   1181           00039         BCF             OPTION_REG,3                                    ;Encargado del prescaler, al est
                            ar en 0, se le asigna a TMR0
                      00040 ;------------------------------------------------------------
                      00041 ;Se configura el TMR0 a 50 milisegundos, usando la formula, eso quiere decir que cada 50ms, el TMR0 aume
                            nta
                      00042 ;------------------------------------------------------------
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0013   1501           00043         BSF             OPTION_REG,2                                    ;Controla el Rate, esta en 1, el
                             valor es 256, este valor se usa para calcular el tiempo (con formula)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0014   1481           00044         BSF             OPTION_REG,1                                    ;Controla el Rate, esta en 1, el
                             valor es 256, este valor se usa para calcular el tiempo (con formula)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0015   1401           00045         BSF             OPTION_REG,0                                    ;Controla el Rate, esta en 1, el
                             valor es 256, este valor se usa para calcular el tiempo (con formula)
0016   178B           00046         BSF             INTCON,7                                                ;Activamos las interrupc
                            iones globales
0017   168B           00047         BSF             INTCON,5                                                ;Activamos las interrupc
                            iones por TMR0
0018   160B           00048         BSF             INTCON,4                                                ;Activamos las interrupc
                            iones por RB0
0019   3001           00049         MOVLW   B'00000001'                                             ;Seteamos el RB0 como entrada, y
                             lo cargamos en w
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
001A   0086           00050         MOVWF   TRISB                                                   ;Lo que tenemos en w, lo movemos
                             a TRISB
001B   1283           00051         BCF             STATUS,5                                                ;Volvemos al banco 0
                      00052 
001C   01A0           00053         CLRF    NUMERO                                                  ;El contenido del registro f se 
                            pone en ceros: 0x00, en la posicion de memoria de la variable NUMERO
001D   01A1           00054         CLRF    CONT_TMR0                                               ;El contenido del registro f se 
                            pone en ceros: 0x00, en la posicion de memoria de la variable CONT_TMR0
001E   01A2           00055         CLRF    FLAG_RESTA                                              ;El contenido del registro f se 
                            pone en ceros: 0x00, en la posicion de memoria de la variable FLAG_RESTA
001F   0103           00056         CLRW                                                                    ;El contenido del regist
                            ro w se pone en ceros: 0x00
0020   2???           00057         CALL    tabla_display                                   ;Llama a tabla_display
0021   0086           00058         MOVWF   PORTB                                                   ;Al retornar, lo guardamos en el
                             PORTB, seria que cuando lo iniciamos se marque un 0
                      00059         
0022   2???           00060         GOTO    $                                                               ;El programa se queda es
                            perando aca (el signo hace que se quede en esta linea, en forma de bucle)
                      00061 
0023                  00062 main
0023   0AA1           00063         INCF    CONT_TMR0,1                                             ;Incrementa el contador del Time
                            r
0024   0821           00064         MOVF    CONT_TMR0,W                                             ;Lo que se va incrementando en l
                            a anterio linea, lo guarda en w
0025   3A14           00065         XORLW   .20                                                             ;Verifica dos valores y 
MPASM  5.31                    EJERCICIO3.ASM   11-16-2021  20:22:41         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            si son iguales es 0, si son diferentes es 1
0026   1D03           00066         BTFSS   STATUS,Z                                                ;Levanta el flag
0027   2???           00067         GOTO    salir_timer                                             ;Se va a mover a la etiqueta sal
                            ir_timer
0028   1822           00068         BTFSC   FLAG_RESTA,0                                    ;Si la verificacion resulta falsa viene 
                            aca, si esta en 0 es suma, si esta en 1 es resta, se verifica el
                      00069                                                                                         ;primer bit y en
                             caso de ser suma, salta a suma o en caso de ser resta, salta a resta
0029   2???           00070         GOTO    resta                                                   ;Se va a mover a la etiqueta res
                            ta
                      00071 
002A                  00072 suma
002A   0AA0           00073         INCF    NUMERO,1                                                ;Incrementamos el NUMERO
002B   1E20           00074         BTFSS   NUMERO,4                                                ;Verificamos el 4to bit, si es 1
                             es porque llego a 16 y no se va a mostrar el mostrar_display, mientras eso 
                      00075                                                                                         ;no suceda va a 
                            ir a mostrar_display
002C   2???           00076         GOTO    mostrar_display                                 ;Se va a mover a la etiqueta mostrar_dis
                            play
002D   09A2           00077         COMF    FLAG_RESTA,F                                    ;Complemento a 1
002E   03A0           00078         DECF    NUMERO,1                                                ;Decrementa en 1
                      00079 
002F                  00080 resta
002F   03A0           00081         DECF    NUMERO,1                                                ;Decrementa en 1
0030   1903           00082         BTFSC   STATUS,Z                                                ;Comprueba si llega a 0, la flag
                             z salta y se pone en 1, en caso de dar 0 salta a la siguiente linea FLAG_RESTA
0031   09A2           00083         COMF    FLAG_RESTA,F                                    ;Vuelve hacer el complemento a 1 a la FL
                            AG_RESTA para que que ponga todo en 0
                      00084 
0032                  00085 mostrar_display
0032   01A1           00086         CLRF    CONT_TMR0                                               ;Limpia el TMR0, para que vuelva
                             a empezar a contar hasta el segundo
0033   0820           00087         MOVF    NUMERO,W                                                ;Mueve a w lo que haya en NUMERO
0034   2???           00088         CALL    tabla_display                                   ;Llama a tabla_display
0035   0086           00089         MOVWF   PORTB                                                   ;Al retornar, lo guardamos en el
                             PORTB  
                      00090                                                 
0036                  00091 salir_timer
0036   110B           00092         BCF             INTCON,T0IF                                             ;Bajamos la flag del TMR
                            0
0037   303D           00093         MOVLW   .61                                                             ;Lo volvemos a cargar
0038   0081           00094         MOVWF   TMR0                                                    ;Lo pasamos a TMR0
                      00095 
0039                  00096 end_int
0039   0009           00097         RETFIE                                                                  ;Vuelve a la linea GOTO 
                            $
                      00098 ;------------------------------------------------------------
                      00099 ;Tabla de Valores
                      00100 ;------------------------------------------------------------
003A                  00101 tabla_display
003A   0782           00102         ADDWF   PCL,1                                                   ;Suma w + PCL + 1 (saltaria a la
                             linea del valor que da)
003B   347E           00103         RETLW   b'01111110';0                                   ;Retorna el literal que esta guardado en
MPASM  5.31                    EJERCICIO3.ASM   11-16-2021  20:22:41         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                             w, y asi con los demas
003C   340C           00104         RETLW   b'00001100';1   
003D   34B6           00105         RETLW   b'10110110';2
003E   349E           00106         RETLW   b'10011110';3
003F   34CC           00107         RETLW   b'11001100';4
0040   34DA           00108         RETLW   b'11011010';5
0041   34FA           00109         RETLW   b'11111010';6
0042   340E           00110         RETLW   b'00001110';7
0043   34FE           00111         RETLW   b'11111110';8
0044   34DE           00112         RETLW   b'11011110';9
0045   34EE           00113         RETLW   b'11101110';A
0046   34F8           00114         RETLW   b'11111000';B
0047   3472           00115         RETLW   b'01110010';C
0048   34BC           00116         RETLW   b'10111100';D
0049   34F2           00117         RETLW   b'11110010';E 
004A   34E2           00118         RETLW   b'11100010';F   
                      00119         
3F10                  00120         END                                                                             ;Fin del program
                            a
MPASM  5.31                    EJERCICIO3.ASM   11-16-2021  20:22:41         PAGE  5


SYMBOL TABLE
  LABEL                             VALUE 

ADEN                              00000003
BRGH                              00000002
C                                 00000000
C1INV                             00000004
C1OUT                             00000006
C2INV                             00000005
C2OUT                             00000007
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCPR1H                            00000016
CCPR1L                            00000015
CIS                               00000003
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             0000001F
CMIE                              00000006
CMIF                              00000006
CONT_TMR0                         00000021
CREN                              00000004
CSRC                              00000007
DC                                00000001
EEADR                             0000009B
EECON1                            0000009C
EECON2                            0000009D
EEDATA                            0000009A
EEIE                              00000007
EEIF                              00000007
F                                 00000001
FERR                              00000002
FLAG_RESTA                        00000022
FSR                               00000004
GIE                               00000007
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
NOT_BO                            00000000
NOT_BOD                           00000000
NOT_BOR                           00000000
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_T1SYNC                        00000002
MPASM  5.31                    EJERCICIO3.ASM   11-16-2021  20:22:41         PAGE  6


SYMBOL TABLE
  LABEL                             VALUE 

NOT_TO                            00000004
NUMERO                            00000020
OERR                              00000001
OPTION_REG                        00000081
OSCF                              00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PIE1                              0000008C
PIR1                              0000000C
PORTA                             00000005
PORTB                             00000006
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
RBIE                              00000003
RBIF                              00000000
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RP0                               00000005
RP1                               00000006
RX9                               00000006
RX9D                              00000000
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
STATUS                            00000003
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1OSCEN                           00000003
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
MPASM  5.31                    EJERCICIO3.ASM   11-16-2021  20:22:41         PAGE  7


SYMBOL TABLE
  LABEL                             VALUE 

TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISB                             00000086
TRMT                              00000001
TX9                               00000006
TX9D                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
VR0                               00000000
VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             0000009F
VREN                              00000007
VROE                              00000006
VRR                               00000005
W                                 00000000
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_.org_1_0022                      00000022
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CP_OFF                           00003FFF
_CP_ON                            00001FFF
_DATA_CP_OFF                      00003FFF
_DATA_CP_ON                       00003EFF
_ER_OSC_CLKOUT                    00003FFF
_ER_OSC_NOCLKOUT                  00003FFE
_EXTCLK_OSC                       00003FEF
_HS_OSC                           00003FEE
_INTOSC_OSC_CLKOUT                00003FFD
_INTOSC_OSC_NOCLKOUT              00003FFC
_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_LP_OSC                           00003FEC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_PWRTE_OFF                        00003FFF
MPASM  5.31                    EJERCICIO3.ASM   11-16-2021  20:22:41         PAGE  8


SYMBOL TABLE
  LABEL                             VALUE 

_PWRTE_ON                         00003FF7
_RC_OSC_CLKOUT                    00003FFF
_RC_OSC_NOCLKOUT                  00003FFE
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_XT_OSC                           00003FED
__16F628A                         00000001
__DEBUG                           1
end_int                           00000039
inicio                            0000000D
main                              00000023
mostrar_display                   00000032
resta                             0000002F
salir_timer                       00000036
suma                              0000002A
tabla_display                     0000003A

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     8 reported,     0 suppressed

